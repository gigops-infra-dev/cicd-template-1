---
name: Merge
on:
  pull_request:
    branches:
      - main
      - staging
    types: [closed]

permissions: write-all
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  TERRAFORM_BASE_DIR: terraform

jobs:
  check-targets:
    runs-on: ubuntu-latest
    outputs:
      apply-url: ${{ steps.check.outputs.apply_url }}
      target-dir: ${{ steps.check.outputs.target_dir }}
    steps: 
      - uses: actions/checkout@v3
      - id: check
        uses: ./.github/actions/read-pull-requests
        with:
          base_ref: ${{ github.base_ref }}
          terraform_base_dir: ${{ env.TERRAFORM_BASE_DIR }}

  apply:
    runs-on: ubuntu-latest
    needs: check-targets
    if: ${{ needs.check-targets.outputs.target-dir != '' }}
    steps:
      - name: Generate github token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.PRIVATE_KEY }}
          
      - uses: actions/checkout@v3
        with:
          token: ${{ steps.generate_token.outputs.token }}
      - uses: ./.github/actions/setup-envs
        with:
          base_ref: ${{ github.base_ref }}
          head_ref: ${{ github.head_ref }}
      - uses: ./.github/actions/setup-terraform
        with:
          working_directory: ./${{env.TERRAFORM_BASE_DIR}}/${{env.GHACTION_TARGET}}
      - uses: ./.github/actions/setup-aws-credentials
        with:
          aws_role_arn: ${{ env.AWS_ROLE_ARN }}
          aws_profile: ${{ env.AWS_PROFILE }}
          aws_region: ap-northeast-1

      - id: init
        uses: ./.github/actions/terragrunt-init
        with:
          aws_profile: ${{ env.AWS_PROFILE }}
          target_dir: ${{ needs.check-targets.outputs.target-dir }}
          git_ssh_command: ssh -i /tmp/id_rsa -o UserKnownHostsFile=./known_hosts
          tf_workspace: ${{ env.TF_WORKSPACE }}
          working-directory: ./${{env.TERRAFORM_BASE_DIR}}/${{env.GHACTION_TARGET}}
          is_write_pr: false
          pr_number: ${{ github.event.pull_request.number }}

      - id: apply
        if: ${{ steps.init.outcome == 'success' }} 
        uses: ./.github/actions/terragrunt-apply
        with:
          aws_profile: ${{ env.AWS_PROFILE }}
          target_dir: ${{ needs.check-targets.outputs.target-dir }}
          git_ssh_command: ssh -i /tmp/id_rsa -o UserKnownHostsFile=./known_hosts
          tf_workspace: ${{ env.TF_WORKSPACE }}
          working-directory: ./${{env.TERRAFORM_BASE_DIR}}/${{env.GHACTION_TARGET}}
          pr_number: ${{ github.event.pull_request.number }}
          apply_url: ${{ needs.check-targets.outputs.apply-url }}
        
  create-pr:
    runs-on: ubuntu-latest
    needs: check-targets
    env:
      BASE_REF: main
      HEAD_REF: staging
    if: ${{ needs.check-targets.outputs.target-dir == '' && github.base_ref  == 'staging' }}
    steps:
      - name: Generate github token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.PRIVATE_KEY }}

      - uses: actions/checkout@v3      
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_ACTION_TOKEN }}

      - uses: ./.github/actions/split-branch
        with:
          base_ref: ${{ env.BASE_REF }}
          head_ref: ${{ env.HEAD_REF }}
          github_action_token: ${{ steps.generate_token.outputs.token }}

  split-branch:
    runs-on: ubuntu-latest
    needs: [check-targets,apply]
    if: ${{ success() && github.base_ref  == 'staging' }}
    env:
      BASE_REF: main
      HEAD_REF: staging
    steps:
      - name: Generate github token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.PRIVATE_KEY }}

      - run: |
          target=$(echo ${GITHUB_HEAD_REF} | awk -F "_" '{ print $NF }')
          echo "TARGET_DIR=$target" >> $GITHUB_ENV

      - uses: ./.actions/checkout@v3
        with:
          token: ${{ secrets.GH_ACTION_TOKEN }}
          ref: ${{ env.HEAD_REF }}
          fetch-depth: 0

      - uses: ./.github/actions/split-branch
        continue-on-error: true
        with:
          base_ref: ${{ env.BASE_REF }}
          head_ref: ${{ env.HEAD_REF }}
          target_dir: ${{ env.TARGET_DIR }}