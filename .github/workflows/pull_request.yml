---
name: Pull Request
on:
  pull_request:
    branches:
      - main
      - staging
    types: [opened,synchronize]

concurrency: 
  group: ${{ github.head_ref }}

permissions: write-all
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  TERRAFORM_BASE_DIR: terraform
jobs:   
  get-changes:
    runs-on: ubuntu-latest
    outputs:
      dir: ${{ steps.diff.outputs.dir }}
      aws_role_arn: ${{ steps.setup-envs.outputs.aws_role_arn}}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: git pull origin ${{ github.head_ref }}
      - id: setup-envs
        uses: ./.github/actions/setup-envs
        with:
          base_ref: ${{ github.base_ref }}
          head_ref: ${{ github.head_ref }}

      - id: diff
        uses: ./.github/actions/check-deploy-resources 
        with:
          base_ref: ${{ github.base_ref }}
          terraform_base_dir: ${{ env.TERRAFORM_BASE_DIR }}
          ghaction_target: ${{ steps.setup-envs.outputs.ghaction_target }}
          tf_workspace: ${{ steps.setup-envs.outputs.tf_workspace }}

  plan:
    runs-on: ubuntu-latest
    needs: get-changes
    if: ${{ needs.get-changes.outputs.dir != '' && needs.get-changes.outputs.aws_role_arn != '' }}
    steps:
      - uses: actions/checkout@v3
      - id: setup-envs
        uses: ./.github/actions/setup-envs
        with:
          base_ref: ${{ github.base_ref }}
          head_ref: ${{ github.head_ref }}
      - uses: ./.github/actions/setup-terraform
        with:
          working_directory: ./${{env.TERRAFORM_BASE_DIR}}/${{ steps.setup-envs.outputs.ghaction_target }}
      - uses: ./.github/actions/setup-aws-credentials
        with:
          aws_role_arn: ${{ steps.setup-envs.outputs.aws_role_arn }}
          aws_profile: ${{ steps.setup-envs.outputs.aws_profile }}
          aws_region: ap-northeast-1
          ssh_key: ${{ secrets.RSA }}

      - id: read-pr
        uses: ./.github/actions/read-pull-requests

      - id: init
        uses: ./.github/actions/terragrunt-init
        with:
          aws_profile: ${{ steps.setup-envs.outputs.aws_profile }}
          working_directory: ./${{ env.TERRAFORM_BASE_DIR }}/${{ steps.setup-envs.outputs.ghaction_target }}
          target_dir: ${{ needs.get-changes.outputs.dir }}
          git_ssh_command: ssh -i /tmp/id_rsa -o UserKnownHostsFile=./known_hosts
          tf_workspace: ${{ steps.setup-envs.outputs.tf_workspace }}
          init_url: ${{ steps.read-pr.outputs.init_url }}
          plan_url: ${{ steps.read-pr.outputs.plan_url }}
          apply_url: ${{ steps.read-pr.outputs.apply_url }}

      - if: ${{ steps.init.outcome == 'success' }} 
        uses: ./.github/actions/terragrunt-plan 
        with:
          aws_profile: ${{ steps.setup-envs.outputs.aws_profile }}
          target_dir: ${{ needs.get-changes.outputs.dir }}
          git_ssh_command: ssh -i /tmp/id_rsa -o UserKnownHostsFile=./known_hosts
          tf_workspace: ${{ steps.setup-envs.outputs.tf_workspace }}
          working_directory: ./${{ env.TERRAFORM_BASE_DIR }}/${{ steps.setup-envs.outputs.ghaction_target }}
          plan_url: ${{ steps.read-pr.outputs.plan_url }}
          apply_url: ${{ steps.read-pr.outputs.apply_url }}

  auto-merge:
    runs-on: ubuntu-latest
    needs: [get-changes,plan]
    if: ${{ needs.get-changes.outputs.dir == '' && github.base_ref != 'main' }}
    steps:
      - id: generate_token
        uses: ezqy/ghaction/generate-github-app-token@v0.0.1
        with:
          app_id: ${{ secrets.app_id }}
          installation_id: ${{ secrets.installation_id }}
          private_key: ${{ secrets.private_key }}

      - uses: actions/checkout@v3
      - run: gh pr merge ${PR_NUMBER} --merge
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}

  auto-merge2:
    runs-on: ubuntu-latest
    needs: plan
    if: ${{ success() && github.base_ref != 'main' }}
    steps:
      - id: generate_token
        uses: ezqy/ghaction/generate-github-app-token@v0.0.1
        with:
          app_id: ${{ secrets.app_id }}
          installation_id: ${{ secrets.installation_id }}
          private_key: ${{ secrets.private_key }}

      - uses: actions/checkout@v3
      - run: gh pr merge ${PR_NUMBER} --merge
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}

  close-pr:
    runs-on: ubuntu-latest
    needs: get-changes
    if: ${{ needs.get-changes.outputs.dir != '' && github.head_ref == 'staging' }}
    steps:
      - id: generate_token
        uses: ezqy/ghaction/generate-github-app-token@v0.0.1
        with:
          app_id: ${{ secrets.app_id }}
          installation_id: ${{ secrets.installation_id }}
          private_key: ${{ secrets.private_key }}
      - uses: actions/checkout@v3
      - run: gh pr close ${PR_NUMBER} -c 'Terraform difference detected.'
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
